#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_de.h"
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define SYM 1
#define NAV 2
#define SYS 3
#define CRIT 4

#define MAC_DE_AT    (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_L)))   /* @ = ⌥+L */
#define MAC_DE_LBKT  (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_5)))   /* [ = ⌥+5 */
#define MAC_DE_RBKT  (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_6)))   /* ] = ⌥+6 */
#define MAC_DE_LBRC  (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_8)))   /* { = ⌥+8 */
#define MAC_DE_RBRC  (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_9)))   /* } = ⌥+9 */
#define MAC_DE_PIPE  (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_7)))   /* | = ⌥+7 */
#define MAC_DE_BSLH  (LS(LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_7)))) /* \ = ⌥⇧+7 */
#define MAC_DE_TILDE (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_N)))   /* ~ = ⌥+N */
/* caret/backtick can be dead keys; we’ll use these “printing” variants */
#define MAC_DE_CARET (LS(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_6_AND_CARET))) /* ^ */
#define MAC_DE_GRAVE (LA(ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYBOARD_GRAVE_ACCENT_AND_TILDE)))

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";
            bindings = <
&kp TAB    &kp Q       &kp W        &kp E       &kp R        &kp T        &kp DE_Z    &kp U        &kp I          &kp O        &kp P          &kp BACKSPACE
&kp LSHFT  &hm LGUI A  &hm LSHFT S  &hm LALT D  &hm LCTRL F  &kp G        &kp H    &hm RCTRL J  &hm RALT K     &hm RSHFT L  &hm RGUI DE_O_UMLAUT  &kp SQT
&kp LCTRL  &kp DE_Y       &kp X        &kp C       &kp V        &kp B        &kp N    &kp M        &kp COMMA      &kp DOT      &kp DE_MINUS       &kp RSHFT
                                    &kp LGUI    &tog 1        &kp SPACE    &kp RET  &tog 2    &kp BACKSPACE
            >;
        };

        SYM {
            display-name = "Sym";
            bindings = <
&trans  &kp DE_EXCL     &kp MAC_DE_AT   &kp DE_HASH   &kp DE_DLLR   &kp DE_PRCNT  &kp MAC_DE_CARET
        &kp DE_EQUAL    &kp DE_PLUS     &kp DE_ASTRK  &kp DE_FSLH   &trans

&trans  &hm LGUI MAC_DE_LBKT   &hm LSHFT MAC_DE_RBKT  &hm LALT DE_U_UMLAUT  &hm LCTRL DE_A_UMLAUT  &kp DE_SHARP_S
        &hm RCTRL DE_LPAR      &hm RALT DE_RPAR       &hm RSHFT MAC_DE_LBRC &hm RGUI MAC_DE_RBRC   &kp MAC_DE_BSLH  &trans

&trans  &kp DE_LT       &kp DE_GT       &kp DE_QMARK  &kp DE_DQT    &kp MAC_DE_TILDE  &kp DE_AMPS
        &kp DE_SQT      &kp MAC_DE_GRAVE &kp MAC_DE_PIPE &kp DE_COLON &trans

                  &kp LGUI  &trans  &kp SPACE  &kp RET  &trans  &trans
            >;
        };  

        NAV {
            display-name = "Nav";
            bindings = <
&trans  &kp N1       &kp N2        &kp N3             &kp N4           &kp N5           &kp N6   &kp N7        &kp N8       &kp N9        &kp N0            &trans
&trans  &hm LGUI TAB  &trans  &trans  &hm LCTRL DEL    &trans      &hm RCTRL LEFT   &hm RALT DOWN  &hm RSHFT UP  &hm RGUI RIGHT  &kp ESC  &trans
&trans  &trans       &trans      &trans           &trans  &trans    &kp PG_UP   &kp PG_DN        &trans       &trans        &trans     &trans
                                   &kp LGUI           &trans           &kp SPACE        &kp RET  &trans        &trans
            >;
        };

        SYS {
            display-name = "System";
            bindings = <
&trans  &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &kp C_BRI_DN &kp C_BRI_UP    &trans  &trans  &trans  &trans  &trans      &trans
&trans  &trans &trans &trans &trans      &trans            &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans       &trans
&trans  &trans       &trans   &trans  &tog 4  &trans    &mkp MB1  &mkp MB2  &msc SCRL_UP  &msc SCRL_DOWN  &trans  &trans
                                     &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };

        CRIT {
            display-name = "Critical";
            bindings = <
&trans  &trans        &trans         &trans        &trans      &trans            &trans  &trans  &trans  &trans  &trans      &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_CLR  &trans            &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans       &trans   &trans  &bootloader  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        sys_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
